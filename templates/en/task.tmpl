<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>{{.AppTitle}}: {{.PageTitle}}</title>
  <link rel="shortcut icon" href="/assets/favicon.png">
  <link rel="stylesheet" href="/assets/fonts.css">
  <link rel="stylesheet" href="/assets/theme-{{.UserConfig.SystemTheme}}.css">
</head>
<body>

<div id="headmenu">
  <div class="boxinmenu">
  <div id="evenly">
    <div class="mobileMenuButton" id="mobileMenuButtonMenu" onclick="showMobileMenu();"><img class="vector" src="/assets/menu.svg" alt="Menu"></div>
    <div class="textmenu" id="textmenu">
    <a href="/docs/">Documents</a>
    <a href="/tasks/?anyparticipants=my" class="chosenmenu">Tasks</a>
    <a href="/team/">Team</a>
    </div>
    <div class="graphicmenu">
      <a href="/config" title="Settings"><img class="vector" src="/assets/settings.svg" alt="Settings"></a>
      <a href="/team/profile/{{.LoggedinID}}" title="Profile"><img class="vector" src="/assets/profile.svg" alt="Profile"></a>
      <a href="/logout" title="Log out"><img class="vector" src="/assets/quit.svg" alt="Log out"></a>
    </div>
  </div>
  </div>
</div>
<div id="mobilemenu" style="display: none;"></div>

<div id="container">
  {{$ci := .Task.GiveCreatorID}}
  {{$ai := .Task.GiveAssigneeID}}
  {{$vtsep := " at "}}
  {{if eq .UserConfig.TimeFormat "12h am/pm"}}
    {{$vtsep = " "}}
  {{end}}

  <div id="control">
    <h1>{{.PageTitle}}</h1>
    <p class="breadcrumbs"><a href="/tasks/">all tasks</a> / task page</p>

    {{if and (not .New) (or .Editable .IamAssignee)}}
    <form id="statuses" action="/tasks/task/{{.Task.ID}}" method="POST">
      <input type="hidden" name="taskStatus" value="" id="taskStatus">
      <input type="submit" class ="sbut" id="inprogress" name="statusButton" value="In progress" title="Set task status - in progress" onclick="document.getElementById('taskStatus').value = 'inprogress';">
      <input type="submit" class ="sbut" id="stuck" name="statusButton" value="Stuck" title="Suspend due to some problem" onclick="document.getElementById('taskStatus').value = 'stuck';">
      <input type="submit" class ="sbut" id="done" name="statusButton" value="Done" title="Complete the task" onclick="document.getElementById('taskStatus').value = 'done';">
      <input type="submit" class ="sbut" id="cancelled" name="statusButton" value="Cancel" title="Cancel the task" onclick="document.getElementById('taskStatus').value = 'cancelled';">
    </form>
    <script>
      (function() {
        const CREATED = 0, ASSIGNED = 1, INPROGRESS = 2, STUCK = 3, DONE = 4, CANCELLED = 5;
        let textStatus = '';
        let taskStatus = {{.Task.TaskStatus}};
        if (taskStatus == INPROGRESS) textStatus = 'inprogress';
        if (taskStatus == STUCK) textStatus = 'stuck';
        if (taskStatus == DONE) textStatus = 'done';
        if (taskStatus == CANCELLED) textStatus = 'cancelled';
        if (textStatus) document.getElementById(textStatus).disabled = true;
      })();
    </script>
    {{end}}

    {{if and .Editable (not .New)}}
      <input type="button" class ="sbut" name="showButton" value="Edit" onclick="showEditForm('edit');">
      <input type="button"{{if not .RemoveAllowed}}style="display: none;"{{end}} class="sbut reddish" name="showDelete" value="Delete" onclick="showEditForm('removal');">
      <form id="removal" action="/tasks/" method="POST" style="display: none;">
      <div class="msgredfx">This action can not be undone! Confirm deletion?</div>
      <input type="hidden" name="ids" value="{{.Task.ID}}">
      <input type="button" class="sbut" name="cancelButton" value="Cancel" onclick="showEditForm('view');">
      <input type="submit" class ="sbut reddish" name="deleteButton" value="Yes, delete">
      </form>
    {{end}}

    {{if eq .Message "dataWritten"}}<div class="msgok">Data written successfully.</div>{{end}}
    {{if eq .Message "dataNotWritten"}}<div class="msgred">Error writing data.</div>{{end}}
    {{if eq .Message "commentWritten"}}<div class="msgok">Comment saved successfully.</div>{{end}}
    {{if eq .Message "commentNotWritten"}}<div class="msgred">Error writing comment.</div>{{end}}
    {{if eq .Message "uploadError"}}<div class="msgred">Error uploading files.</div>{{end}}
    {{if eq .Message "removalError"}}<div class="msgred">Error deleting files.</div>{{end}}
    {{if eq .Message "participantAlreadyInList"}}<div class="msgok">This participant is already in the list.</div>{{end}}
  </div>

  <div id="main">

  {{if not .New}}
    <div id="view">
      <h2>Parameters:</h2>
      <p><span class="ofname">Status:</span><span class="ofval" id="about"><span id="statusIndicator" class="txtbw">{{.Task.GiveStatus .TaskStatuses "Unknown"}}</span>;
        status set: {{.Task.GiveDateTime "StatusSet" .UserConfig.DateFormat .UserConfig.TimeFormat $vtsep}}</span></p>
        <script>
          (function() {
            const CREATED = 0, ASSIGNED = 1, INPROGRESS = 2, STUCK = 3, DONE = 4, CANCELLED = 5;
            let className = '';
            let taskStatus = {{.Task.TaskStatus}};
            if (taskStatus == CREATED || taskStatus == ASSIGNED || taskStatus == INPROGRESS) className = 'txtblue';
            if (taskStatus == STUCK) className = 'txtred';
            if (taskStatus == DONE) className = 'txtgreen';
            if (taskStatus == CANCELLED) className = 'txtbw';
            if (className) document.getElementById('statusIndicator').className = className;
          })();
        </script>
      <p><span class="ofname">Planned start and due:</span><span class="ofval">{{if .Task.PlanStart.Day}}<span class="nowrap">start: {{.Task.GiveDateTime "PlanStart" .UserConfig.DateFormat .UserConfig.TimeFormat $vtsep}}</span>{{end}}
        {{if and .Task.PlanStart.Day .Task.PlanDue.Day}}-{{end}}
        {{if .Task.PlanDue.Day}}<span class="nowrap">due: {{.Task.GiveDateTime "PlanDue" .UserConfig.DateFormat .UserConfig.TimeFormat $vtsep}}</span>{{end}}</span></p>
      <p><span class="ofname">Created:</span><span class="ofval">{{.Task.GiveDateTime "Created" .UserConfig.DateFormat .UserConfig.TimeFormat $vtsep}}{{if $ci}}, creator (owner): <a href="/team/profile/{{$ci}}">{{.Task.Creator.GiveSelfNameJob}}</a>{{end}}</span></p>
      <p><span class="ofname">Assignee:</span><span class="ofval">{{if $ai}}<a href="/team/profile/{{$ai}}">{{.Task.Assignee.GiveSelfNameJob}}</a>{{end}} {{if or .Editable .IamAssignee}}<span class="someaction" onclick="document.getElementById('forwardControls').style.display = 'block';">{{if $ai}}Forward to another user{{else}}Select assignee{{end}}</span>{{end}}</span></p>
      {{if or .Editable .IamAssignee}}<div id="forwardControls" style="display: none;">
        <span class="nowrap"><select id="selectedAssignee" class="numberbox">
          <option value="">Select new assignee</option>
          {{range .UserList}}<option value="{{.ID}}">{{.FullNameJob}}</option>
          {{end}}
        </select><span class="dropdown"></span></span> <span class="nowrap">
        <input type="button" class ="sbut greenish smaller" value="Forward"
        onclick="makeFormAndSubmit(document.getElementById('selectedAssignee').value, 'assigneeForward', '/tasks/task/{{.Task.ID}}');">
        <input type="button" class ="sbut smaller" value="Cancel" onclick="document.getElementById('forwardControls').style.display = 'none';">
        </span>
      </div>{{end}}
      <h2>Content:</h2>
      <div class="elem"><div class="subelem multilineContent">{{.Task.Content}}</div></div>

      <div id="appliedElems">Participants:
        {{range .Participants}}<a class="chosen-withrm" href="/team/profile/{{.ID}}">{{.GiveSelfNameJob}}</a>{{if or $.Editable $.IamAssignee}}<span class="rm" title="Delete" onclick="makeFormAndSubmit('{{.ID}}', 'participantRemove', '/tasks/task/{{$.Task.ID}}');">Ã—</span>{{end}} {{end}}
      </div>
      {{if or .Editable .IamAssignee}}<div>
        <span class="nowrap"><select id="selectedParticipant" class="numberbox">
          <option value="">Select a participant to add</option>
          {{range .UserList}}<option value="{{.ID}}">{{.FullNameJob}}</option>
          {{end}}
        </select><span class="dropdown"></span></span>
        <input type="button" class ="sbut greenish smaller" value="Add participant"
        onclick="makeFormAndSubmit(document.getElementById('selectedParticipant').value, 'participantAdd', '/tasks/task/{{.Task.ID}}');">
      </div>{{end}}

      <h2>Task files:</h2>
      {{if not .Task.FileList}}<div class="afile-inline-block">No files</div>{{else}}
        {{range .Task.FileList}}<span class="afile-inline-block">
          {{if $.Editable}}<input type="checkbox" class="fchbox" name="filesToRemove" value="{{.}}">{{end}}
          <a href="/files/tasks/{{$.Task.ID}}/{{.}}">{{.}}</a></span>
        <br>{{end}}
      {{end}}
      {{if and .Editable .Task.FileList (not .New)}}
        Selected files: <input type="button" class ="sbut reddish" name="showDeleteFiles" value="Delete" onclick="showEditForm('removalFiles');">
        <form id="removalFiles" action="/tasks/task/{{.Task.ID}}" method="POST" onsubmit="addFileElems(this);" style="display: none;">
        <div class="msgredfx">This action can not be undone! Confirm deletion?</div>
        <input type="button" class="sbut" name="cancelButton" value="Cancel" onclick="showEditForm('view');">
        <input type="submit" class ="sbut reddish" name="deleteFiles" value="Yes, delete">
        </form>
      {{end}}
      <br>
      <br>

      <h2>Comments:</h2>
      {{range $i, $c := .Comments}}
        {{$cc := .GiveCreatorID}}
        {{$comID := .ID}}
        <div class="elem" id="comment{{.Inci $i}}">
        <h3><a href="#comment{{.Inci $i}}">#{{.Inci $i}}</a>: {{.GiveDateTime $.UserConfig.DateFormat $.UserConfig.TimeFormat $vtsep}} by:
          {{if $cc}}<a href="/team/profile/{{$cc}}">{{.Creator.GiveSelfNameJob}}</a>{{end}}</h3>
        <span class="subelem multilineContent">{{.Content}}</span>
        {{if .FileList}} <div class="subelem">Attached files:<br>
        {{range .FileList}}<span class="afile-inline-block">
          <a href="/files/tasks/{{$.Task.ID}}/{{$comID}}/{{.}}">{{.}}</a></span>
        <br>{{end}}</div>
        {{end}}
        </div>
      {{end}}
      
      {{if or .Editable .IamAssignee .IamParticipant}}
      <br><br><br>
      <div class="elem" id="newComment"><h3>New comment</h3>
        <form id="taskCreateComment" action="/tasks/task/{{.Task.ID}}" method="POST" enctype="multipart/form-data">
          <div class="subelem"><div class="nowrap">
            <input type="button" class="sbut pg smaller" value="B" title="Bold" onclick="insertBBCode('b', 'textAreaComm')">
            <input type="button" class="sbut pg smaller" value="I" title="Italic" onclick="insertBBCode('i', 'textAreaComm')">
            <input type="button" class="sbut pg smaller" value="U" title="Underline" onclick="insertBBCode('u', 'textAreaComm')">
            <input type="button" class="sbut pg smaller" value="Code" title="Monospace font, keep formatting" onclick="insertBBCode('code', 'textAreaComm')">
          </div>
          <textarea class="multiline" id="textAreaComm" name="content" maxlength="8000" style="width: 100%; height: 8em; margin-bottom: 0.4em;"></textarea>
          <div class="filedrop">
              <div id="fileDisplayComm"><br></div>
              <label id="fileDisplayMsgComm" class="center" for="fileListComm">Drag and drop files here or click to select.<br>Up to 10 files. Up to 100 megabytes total upload size.</label>
              <input type="file" multiple id="fileListComm" name="fileListComm" onchange="displaySelectedFiles(
                this,
                document.getElementById('fileDisplayComm'),
                document.getElementById('fileDisplayMsgComm'),
                'The quantity of selected files exceeds the limit. Files are rejected.',
                'The size of selected files exceeds the limit. Files are rejected.'
                );">
            </div>
            <input type="button" class ="sbut" value="Clear selected files" onclick="clearInputFiles(
              document.getElementById('fileListComm'),
              document.getElementById('fileDisplayComm'),
              document.getElementById('fileDisplayMsgComm'),
              'Cleared.'
              );"></div>
          <div class="subelem"><input type="submit" class ="sbut greenish" name="createComment" value="Add comment"></div>
        </form>
      </div>
      {{end}}

    </div>
  {{end}}

  {{if .Editable}}
    {{if .New}}<div id="create"><form id="createForm" action="/tasks/task/new" method="POST" enctype="multipart/form-data" onsubmit="localStorage.setItem('new', 'task');">
    {{else}}<div id="edit" style="display: none;"><form id="editForm" action="/tasks/task/{{.Task.ID}}" method="POST" enctype="multipart/form-data">{{end}}
     
      <h2>Parameters:</h2>
      <p><span class="ofname">Planned start and due:</span>
        {{$tsep := " "}}
        {{$inpt := "text"}}
        {{if .UserConfig.UseCalendarInConrols}}
          {{$tsep = "T"}}
          {{$inpt = "datetime-local"}}
        {{end}}
        <span class="nowrap">start: <input type="{{$inpt}}" class="numberbox" name="planStart" value="{{.Task.GiveDateTime "PlanStart" "yyyy-mm-dd" "24h" $tsep}}" placeholder="yyyy-mm-dd hh:mm" pattern="-?\d+-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}" size="18" maxlength="32"></span>
        <span class="nowrap">due: <input type="{{$inpt}}" class="numberbox" name="planDue" value="{{.Task.GiveDateTime "PlanDue" "yyyy-mm-dd" "24h" $tsep}}" placeholder="yyyy-mm-dd hh:mm" pattern="-?\d+-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}" size="18" maxlength="32"></span>
      </p>
      <p><span class="ofname">Assignee:</span> <span class="nowrap">
        <select name="assignee" id="assignee" class="numberbox">
        <option value="0">no</option>
        {{range .UserList}}<option value="{{.ID}}">{{.FullNameJob}}</option>
        {{end}}
      </select><span class="dropdown"></span></span></p>
      <h2>Content:</h2>
      <p><span class="ofname">Topic*:</span> <input type="text" class="field ofval" name="topic" size="30" maxlength="127" value="{{.Task.Topic}}" required></p>
      <div class="wideelem"><span class="ofname">Content:</span> <span class="ofval nowrap">
        <input type="button" class="sbut pg smaller" value="B" title="Bold" onclick="insertBBCode('b', 'textAreaMain')">
        <input type="button" class="sbut pg smaller" value="I" title="Italic" onclick="insertBBCode('i', 'textAreaMain')">
        <input type="button" class="sbut pg smaller" value="U" title="Underline" onclick="insertBBCode('u', 'textAreaMain')">
        <input type="button" class="sbut pg smaller" value="Code" title="Monospace font, keep formatting" onclick="insertBBCode('code', 'textAreaMain')">
        </span><br>
        <textarea class="multiline" id="textAreaMain" name="content" maxlength="8000" style="width: 100%; height: 8em; margin-bottom: 0.4em;">{{.Task.Content}}</textarea>
      </div>
      <h2>Upload files:</h2>
      <div class="filedrop">
        <div id="fileDisplay"><br></div>
        <label id="fileDisplayMsg" class="center" for="fileList">Drag and drop files here or click to select.<br>Up to 10 files. Up to 100 megabytes total upload size.</label>
        <input type="file" multiple id="fileList" name="fileList" onchange="displaySelectedFiles(
          this,
          document.getElementById('fileDisplay'),
          document.getElementById('fileDisplayMsg'),
          'The quantity of selected files exceeds the limit. Files are rejected.',
          'The size of selected files exceeds the limit. Files are rejected.'
          );">
      </div>
      <input type="button" class ="sbut" value="Clear selected files" onclick="clearInputFiles(
        document.getElementById('fileList'),
        document.getElementById('fileDisplay'),
        document.getElementById('fileDisplayMsg'),
        'Cleared.'
        );">
      <br>
      <br>

    {{if .New}}<input type="submit" class ="sbut" name="createButton" value="Create">
               <input type="button" class ="sbut" name="cancelButton" value="Cancel" 
               onclick="if (history.length > 1) {history.back()} else {window.location.href = '/tasks/'}">
    </form>{{else}}
      <input type="submit" class ="sbut" name="updateButton" value="Save">
      <input type="button" class ="sbut" name="hideButton" value="Cancel" onclick="this.parentNode.reset(); showEditForm('view');">
    </form>{{end}}
    </div>
  {{end}}

</div>

<div id="bottom">Â© 2022 <a href="https://github.com/alecxcode/edm" target="_blank">EDM Project</a></div>


</div>

<script src="/assets/functions.js"></script>



<script>
/* Page loading function for read */
(function() {
  updateMultilines('multilineContent');
})();
</script>



{{if .Editable}}
<script>
/* Page loading function for edit */
(function() {
  document.getElementById('assignee').value = "{{$ai}}";

  let result = localStorage.getItem('new');
  if (result) {
    localStorage.removeItem('new');
    if (!window.location.href.endsWith('new')) {
      let msgnew = document.createElement('div');
      msgnew.className = "msgok";
      msgnew.innerHTML = "Creation completed.";
      document.getElementById('control').appendChild(msgnew);
    }
  }
})();

/* This function shows or hides edit controls */
function showEditForm(what) {
  const view = document.getElementById('view');
  const edit = document.getElementById('edit');
  const removal = document.getElementById('removal');
  const removalFiles = document.getElementById('removalFiles');
  if (what == 'edit') {
    view.style.display = 'none';
    edit.style.display = 'block';
    removal.style.display = 'none';
    if (removalFiles) removalFiles.style.display = 'none'
  } else if (what == 'removal') {
    view.style.display = 'block';
    edit.style.display = 'none';
    removal.style.display = 'block';
    if (removalFiles) removalFiles.style.display = 'none'
  } else if (what == 'removalFiles') {
    view.style.display = 'block';
    edit.style.display = 'none';
    removal.style.display = 'none';
    if (removalFiles) removalFiles.style.display = 'block'
  } else {
    view.style.display = 'block';
    edit.style.display = 'none';
    removal.style.display = 'none';
    if (removalFiles) removalFiles.style.display = 'none'
  }
}

</script>
{{end}}

</body>
</html>
