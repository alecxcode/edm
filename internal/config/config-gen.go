package config

// Code generated by go generate; DO NOT EDIT.
// This file was generated with Python robot.

func makeStringToWriteToINI(cfg *Config) string {
	s := ""
	s += "ServerSystem = " + cfg.ServerSystem + "\n"
	s += "ServerRoot = " + cfg.ServerRoot + "\n"
	s += "ServerHost = " + cfg.ServerHost + "\n"
	s += "ServerPort = " + cfg.ServerPort + "\n"
	s += "DomainName = " + cfg.DomainName + "\n"
	s += "DefaultLang = " + cfg.DefaultLang + "\n"
	s += "StartPage = " + cfg.StartPage + "\n"
	s += "RemoveAllowed = " + cfg.RemoveAllowed + "\n"
	s += "RunBrowser = " + cfg.RunBrowser + "\n"
	s += "UseTLS = " + cfg.UseTLS + "\n"
	s += "SSLCertFile = " + cfg.SSLCertFile + "\n"
	s += "SSLKeyFile = " + cfg.SSLKeyFile + "\n"
	s += "CreateDB = " + cfg.CreateDB + "\n"
	s += "DBType = " + cfg.DBType + "\n"
	s += "DBName = " + cfg.DBName + "\n"
	s += "DBHost = " + cfg.DBHost + "\n"
	s += "DBPort = " + cfg.DBPort + "\n"
	s += "DBUser = " + cfg.DBUser + "\n"
	s += "DBPassword = " + cfg.DBPassword + "\n"
	s += "REDISConnect = " + cfg.REDISConnect + "\n"
	s += "REDISPassword = " + cfg.REDISPassword + "\n"
	s += "REDISFlush = " + cfg.REDISFlush + "\n"
	s += "SMTPEmail = " + cfg.SMTPEmail + "\n"
	s += "SMTPHost = " + cfg.SMTPHost + "\n"
	s += "SMTPPort = " + cfg.SMTPPort + "\n"
	s += "SMTPUser = " + cfg.SMTPUser + "\n"
	s += "SMTPPassword = " + cfg.SMTPPassword + "\n"

	return s
}

func readMapToCfgStruct(m map[string]string, cfg *Config) {
	if _, ok := m["ServerSystem"]; ok {
		cfg.ServerSystem = m["ServerSystem"]
	}
	if _, ok := m["ServerRoot"]; ok {
		cfg.ServerRoot = m["ServerRoot"]
	}
	if _, ok := m["ServerHost"]; ok {
		cfg.ServerHost = m["ServerHost"]
	}
	if _, ok := m["ServerPort"]; ok {
		cfg.ServerPort = m["ServerPort"]
	}
	if _, ok := m["DomainName"]; ok {
		cfg.DomainName = m["DomainName"]
	}
	if _, ok := m["DefaultLang"]; ok {
		cfg.DefaultLang = m["DefaultLang"]
	}
	if _, ok := m["StartPage"]; ok {
		cfg.StartPage = m["StartPage"]
	}
	if _, ok := m["RemoveAllowed"]; ok {
		cfg.RemoveAllowed = m["RemoveAllowed"]
	}
	if _, ok := m["RunBrowser"]; ok {
		cfg.RunBrowser = m["RunBrowser"]
	}
	if _, ok := m["UseTLS"]; ok {
		cfg.UseTLS = m["UseTLS"]
	}
	if _, ok := m["SSLCertFile"]; ok {
		cfg.SSLCertFile = m["SSLCertFile"]
	}
	if _, ok := m["SSLKeyFile"]; ok {
		cfg.SSLKeyFile = m["SSLKeyFile"]
	}
	if _, ok := m["CreateDB"]; ok {
		cfg.CreateDB = m["CreateDB"]
	}
	if _, ok := m["DBType"]; ok {
		cfg.DBType = m["DBType"]
	}
	if _, ok := m["DBName"]; ok {
		cfg.DBName = m["DBName"]
	}
	if _, ok := m["DBHost"]; ok {
		cfg.DBHost = m["DBHost"]
	}
	if _, ok := m["DBPort"]; ok {
		cfg.DBPort = m["DBPort"]
	}
	if _, ok := m["DBUser"]; ok {
		cfg.DBUser = m["DBUser"]
	}
	if _, ok := m["DBPassword"]; ok {
		cfg.DBPassword = m["DBPassword"]
	}
	if _, ok := m["REDISConnect"]; ok {
		cfg.REDISConnect = m["REDISConnect"]
	}
	if _, ok := m["REDISPassword"]; ok {
		cfg.REDISPassword = m["REDISPassword"]
	}
	if _, ok := m["REDISFlush"]; ok {
		cfg.REDISFlush = m["REDISFlush"]
	}
	if _, ok := m["SMTPEmail"]; ok {
		cfg.SMTPEmail = m["SMTPEmail"]
	}
	if _, ok := m["SMTPHost"]; ok {
		cfg.SMTPHost = m["SMTPHost"]
	}
	if _, ok := m["SMTPPort"]; ok {
		cfg.SMTPPort = m["SMTPPort"]
	}
	if _, ok := m["SMTPUser"]; ok {
		cfg.SMTPUser = m["SMTPUser"]
	}
	if _, ok := m["SMTPPassword"]; ok {
		cfg.SMTPPassword = m["SMTPPassword"]
	}

}
